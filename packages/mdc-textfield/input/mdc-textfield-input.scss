//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "../variables";
@import "@material/rtl/mixins";
@import "@material/theme/variables";
@import "@material/theme/mixins";
@import "@material/typography/mixins";
@import "@material/typography/variables";

// postcss-bem-linter: define textfield
.mdc-textfield {

  &__input {
    @include mdc-theme-prop(color, text-primary-on-light);
    @include mdc-typography-base;
    // We use only a subset of the MDC typography values here as changing things such as line-height
    // affects how the labels are transformed.
    // TODO: Re-add setting the font-size from mdc-typography-styles (currently
    // setting it here has no effect because it is overriden by the font-size
    // given below).
    @each $prop in (letter-spacing) {
      #{$prop}: map-get(map-get($mdc-typography-styles, subheading2), $prop);
    }

    width: 100%;
    padding: 0 0 8px;
    transition: mdc-textfield-transition(opacity);
    border: none;
    border-bottom: 1px solid $mdc-textfield-underline-on-light-idle;
    background: none;
    font-size: inherit;
    appearance: none;

    &::placeholder {
      @include mdc-theme-prop(color, text-hint-on-light);

      transition: mdc-textfield-transition(color);
      opacity: 1;
    }

    &:hover {
      border-color: $mdc-textfield-underline-on-light;
    }

    &:focus {
      outline: none;

      &::placeholder {
        @include mdc-theme-prop(color, $mdc-textfield-light-placeholder);
      }
    }

    // Remove red outline on firefox
    &:invalid {
      box-shadow: none;
    }

    @include mdc-theme-dark {
      @include mdc-theme-prop(color, text-primary-on-dark);

      border-bottom: 1px solid $mdc-textfield-underline-on-dark-idle;

      &:hover {
        border-bottom: 1px solid $mdc-textfield-underline-on-dark;
      }

      &::placeholder {
        @include mdc-theme-prop(color, text-hint-on-dark);
      }

      &:focus::placeholder {
        @include mdc-theme-prop(color, $mdc-textfield-dark-placeholder);
      }
    }
  }
}

// Move label when textfield gets autofilled in Chrome
.mdc-textfield__input {
  // stylelint-disable plugin/selector-bem-pattern
  &:-webkit-autofill + .mdc-textfield__label {
    transform: translateY(-100%) scale(.75, .75);
    cursor: auto;
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-textfield--box {

  // NOTE: For some reason, stylelint complains that the patterns below don't follow BEM.
  // However, it seems to emit the wrong selector for that pattern. Thus, we disable it above where
  // we would normally disable it (on combined selectors) as a workaround.

  // stylelint-disable plugin/selector-bem-pattern
  .mdc-textfield__input {
    align-self: flex-end;
    box-sizing: border-box;
    height: 100%;
    padding: 20px 16px 0;
  }

  &.mdc-textfield--dense {
    .mdc-textfield__input {
      padding: 12px 12px 0;
    }
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-textfield--with-leading-icon {
  .mdc-textfield__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-textfield-icon-padding, $mdc-textfield-icon-position);
  }
}

.mdc-textfield--with-trailing-icon {
  .mdc-textfield__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-textfield-icon-position, $mdc-textfield-icon-padding);
  }
}

.mdc-textfield--with-leading-icon.mdc-textfield--dense {
  .mdc-textfield__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-textfield-dense-icon-padding, $mdc-textfield-dense-icon-position);
  }
}

.mdc-textfield--with-trailing-icon.mdc-textfield--dense {
  .mdc-textfield__input {
    @include mdc-rtl-reflexive-property(padding, $mdc-textfield-dense-icon-position, $mdc-textfield-dense-icon-padding);
  }
}

.mdc-textfield--invalid {
  .mdc-textfield__input {
    border-color: $mdc-textfield-error-on-light;
  }
}

.mdc-textfield--disabled {

  .mdc-textfield__input {
    border-bottom: 1px dotted $mdc-textfield-disabled-border-on-light;

    @include mdc-theme-dark(".mdc-textfield", true) {
      border-bottom: 1px dotted $mdc-textfield-disabled-border-on-dark;
    }
  }
}

.mdc-textfield--textarea {

  // stylelint-disable plugin/selector-bem-pattern
  .mdc-textfield__input {
    padding: $mdc-text-field-padding-inset;
    padding-top: $mdc-text-field-padding-inset * 2;
    border: 1px solid transparent;

    &:focus {
      @include mdc-theme-prop(border-color, primary);
    }

    &:invalid:not(:focus) {
      border-color: $mdc-textfield-error-on-light;
    }

    @include mdc-theme-dark(".mdc-textfield") {
      &:hover {
        border-bottom-color: transparent;
      }

      &:focus {
        @include mdc-theme-prop(border-color, secondary);
      }

      &:invalid:not(:focus) {
        border-color: $mdc-textfield-error-on-dark;
      }
    }
  }

  &:not(.mdc-textfield--upgraded) {
    .mdc-textfield__input {
      padding-top: $mdc-text-field-padding-inset;
    }
  }
}

// stylelint-enable plugin/selector-bem-pattern

.mdc-textfield--fullwidth {
  // stylelint-disable plugin/selector-bem-pattern

  &:not(.mdc-textfield--textarea) {

    .mdc-textfield__input {
      width: 100%;
      height: 100%;
      padding: 0;
      resize: none;
      // Use !important here to override all other border treatments
      border: none !important;
    }
  }

  // stylelint-enable plugin/selector-bem-pattern
}

// Graceful degredation for css-only inputs

.mdc-textfield {
  &:not(.mdc-textfield--upgraded):not(.mdc-textfield--textarea) .mdc-textfield__input {
    transition: mdc-textfield-transition(border-bottom-color);
    border-bottom: 1px solid $mdc-textfield-divider-on-light;
  }

  &:not(.mdc-textfield--upgraded) .mdc-textfield__input {
    &:focus {
      @include mdc-theme-prop(border-color, primary);
    }

    &:disabled {
      @include mdc-theme-prop(color, $mdc-textfield-dark-placeholder);

      border-bottom-style: dotted;
    }

    // stylelint-disable selector-max-specificity
    &:invalid:not(:focus) {
      border-color: $mdc-textfield-error-on-light;
    }
    // stylelint-enable selector-max-specificity
  }

  @include mdc-theme-dark {
    &:not(.mdc-textfield--upgraded) .mdc-textfield__input {
      &:not(:focus) {
        border-color: rgba(white, .12);
      }

      &:disabled {
        @include mdc-theme-prop(color, $mdc-textfield-dark-placeholder);

        border-color: $mdc-textfield-disabled-border-on-dark;
        background-color: $mdc-textarea-disabled-background-on-dark;
      }

      // stylelint-disable selector-max-specificity
      &:invalid:not(:focus) {
        border-color: $mdc-textfield-error-on-dark;
      }
      // stylelint-enable selector-max-specificity
    }
  }
}

.mdc-textfield--box:not(.mdc-textfield--upgraded) {

  .mdc-textfield__input {
    padding-top: 0;
  }
}
